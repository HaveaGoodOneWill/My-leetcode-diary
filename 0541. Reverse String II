class Solution {
    public String reverseStr(String s, int k) {
        char[] ch1 = s.toCharArray();
        for(int i = 0; i < s.length(); i = i + (2*k)) {
            int left = i;
            int right = 0;
            if(i + k - 1 >= s.length() -1) {
                right = s.length() - 1;
            }
            else if (i + k - 1 <= s.length() -1){
                right = left + k -1;
            }
            while(left <= right) {
                char ch = ch1[left];
                ch1[left] = ch1[right];
                ch1[right] = ch;
                left++;
                right--;
            }
        }
        return new String(ch1);
    }
}
class Solution {
    public String reverseStr(String s, int k) {
        char[] ch1 = s.toCharArray();
        for(int i = 0; i < s.length(); i = i + (2*k)) {
            int left = i;
            int right = Math.min(s.length() - 1,left + k -1);
            while(left <= right) {
                char ch = ch1[left];
                ch1[left] = ch1[right];
                ch1[right] = ch;
                left++;
                right--;
            }
        }
        return new String(ch1);
    }
}
