class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        int[][] dp = new int[m][n];
        if (obstacleGrid[m - 1][n - 1] == 1 || obstacleGrid[0][0] == 1) {
            return 0;
        }
        for(int i = 0; i < m; i++) {
            if(obstacleGrid[i][0] == 0){
            dp[i][0] = 1;
            }
            else {
                break;
            }
        }
        for(int i = 0; i < n; i++) {
            if(obstacleGrid[0][i] == 0){
            dp[0][i] = 1;
            }
            else {
                break;
            }
        }
        for(int i = 0; i < m - 1; i++) {
            for(int j = 1; j <= n - 1; j++) {
                if(obstacleGrid[i + 1][j] == 0) {
                dp[i + 1][j] = dp[i + 1][j - 1] + dp[i][j];
                }
                else {
                    dp[i + 1][j] = 0;
                }
            }
        }
        return dp[m - 1][n - 1];
    }
}
