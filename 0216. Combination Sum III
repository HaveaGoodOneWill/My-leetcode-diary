class Solution {
    List<List<Integer>> res = new ArrayList<>();
    public List<List<Integer>> combinationSum3(int k, int n) {
        if (k == 0) {
            return res;
        }
        int sum = 0;
        backtrack(k, n ,1, sum);
        return res;
    }
    List<Integer> temp = new ArrayList<>();
    public void backtrack(int k, int n, int j, int sum) {
        
        if (temp.size() == k) {
            if (sum == n) {
                res.add(new ArrayList<>(temp));
            }
        }
        for (int i = j; i <= 9; i++) {
            temp.add(i);
            sum = sum + i;
            backtrack(k, n ,i + 1, sum);
            temp.remove(temp.size() - 1);
            sum = sum - i;
        } 
    }
}
