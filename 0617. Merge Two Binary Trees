class Solution {
    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {
        if (root1 == null) {
            return root2;
        }
        if (root2 == null) {
            return root1;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root1);
        queue.add(root2);
        while(!queue.isEmpty()){
            TreeNode x1 = queue.remove();
            TreeNode x2 = queue.remove();
            x1.val = x1.val + x2.val;
            if(x1.left != null && x2.left != null) {
                queue.add(x1.left);
                queue.add(x2.left);
            }
            if(x1.right != null && x2.right != null) {
                queue.add(x1.right);
                queue.add(x2.right);
            }
            if (x1.left == null && x2.left != null) {
                x1.left = x2.left;
            }
            if (x1.right == null && x2.right != null) {
                x1.right = x2.right;
            }
        }
        return root1;
    }
}
