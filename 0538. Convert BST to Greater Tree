class Solution {
    int sum = 0;
    public TreeNode convertBST(TreeNode root) {
        if (root == null) {
            return null;
        }
        
        root.right = convertBST(root.right);
        sum = sum + root.val;
        root.val = sum;
        root.left = convertBST(root.left);
        return root;
    }

}
class Solution {
    public TreeNode convertBST(TreeNode root) {
        Stack<TreeNode> stack = new Stack<>();
        TreeNode x = root;
        int sum = 0;
        while (x != null || !stack.isEmpty()) {
            while (x != null) {
                stack.push(x);
                x = x.right;
            }
            x = stack.pop();
            sum = sum + x.val;
            x .val = sum;
            x = x.left;
        }
        return root;
    }
}
