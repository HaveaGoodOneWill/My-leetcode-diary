class Solution {
    public int maxDepth(Node root) {
        if(root == null) {
            return 0;
        }
        int num = 0;
        Queue<Node> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()) {
            int len = queue.size();
            num++;
            for (int i = 0; i < len; i++) {
                Node x = queue.remove();
                queue.addAll(x.children);
            }
        }
        return num;
    }
}
class Solution {
    public int maxDepth(Node root) {
        if(root == null) {
            return 0;
        }
        int depth = 0;
        if(root.children != null) {
            for(Node child : root.children) {
                depth = Math.max(depth, maxDepth(child));
            }
        }
        return depth + 1;
    }
}
