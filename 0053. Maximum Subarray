class Solution {
    public int maxSubArray(int[] nums) {
        if (nums.length < 2) {
            return nums[0];
        }
        int sum = Integer.MIN_VALUE;
        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            count = count + nums[i];
            sum = Math.max(sum, count);
            if (count <= 0) {
                count = 0;
            }
        }
        return sum;
    }
}
class Solution {
    public int maxSubArray(int[] nums) {
        int ans = Integer.MIN_VALUE;
        int [] dp = new int[nums.length];
        dp[0] = nums[0];
        ans =dp[0];
        for (int i = 1; i < nums.length; i++) {
            dp[i] = Math.max(dp[i - 1] +nums[i], nums[i]);
            ans = Math.max(dp[i], ans);
        }
        return ans;
    }
}
