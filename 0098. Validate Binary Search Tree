class Solution {
    long max = Long.MIN_VALUE;
    public boolean isValidBST(TreeNode root) {
        
        if(root == null) {
            return true;
        }
        boolean x = isValidBST(root.left);
        if(root.val > max) {
            max = root.val;
        }
        else {
            return false;
        }
        boolean y = isValidBST(root.right);
        return x && y;
    }
    
}
class Solution {
    public boolean isValidBST(TreeNode root) {
        Long y = Long.MIN_VALUE;
        Stack<TreeNode> stack = new Stack<>();
        TreeNode x =root;
        while(x != null || !stack.isEmpty()) {
            while (x != null) {
                stack.push(x);
                x = x.left;
            }
            x = stack.pop();
            if(x.val > y) {
                y = (long)x.val;
            }
            else {
                return false;
            }
            x = x.right;
        }
        return true;
    }
}
