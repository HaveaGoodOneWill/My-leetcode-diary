/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<Integer>();
        if(root == null) {
            return res;
        }
        Stack<TreeNode> stack = new Stack<TreeNode>();
        TreeNode x = root;
        stack.push(x);
        while(!stack.isEmpty()) {
            x = stack.pop();
            res.add(0,x.val);
            if(x.left!=null) {
                stack.push(x.left);
            }
            if(x.right!=null) {
                stack.push(x.right);
            }
        }
        return res;
    }
}
