class Solution {
    public int maxProfit(int[] prices) {
        int dp[] = new int[prices.length];
        dp[0] = 0;
        for (int i = 1; i < prices.length; i++) {
            if (prices[i] - prices[i - 1] <= 0) {
                dp[i] = Math.max(dp[i], dp[i-1]);
            }
            else if (prices[i] - prices[i - 1] > 0) {
                dp[i] = prices[i] - prices[i - 1] + dp[i-1];
            }
        }
        return dp[prices.length - 1];
    }
}
class Solution {
    public int maxProfit(int[] prices) {
        int sum = 0;
        for (int i = 1; i < prices.length; i++) {
            if (prices[i] - prices[i - 1] > 0) {
                sum += prices[i] - prices[i - 1];
            }
        }
        return sum;
    }
}
