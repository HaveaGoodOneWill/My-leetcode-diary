/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if (root == null) {
            return 0;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        int de = 0;
        queue.add(root);
        while(!queue.isEmpty()) {
            de++;
            int size = queue.size();
            for(int i = 0; i < size; i++) {
            TreeNode x = queue.remove();
            if(x.left == null && x.right == null) {
                return de;
            }
            if(x.left != null) {
                queue.add(x.left);
            }
            if(x.right != null) {
                queue.add(x.right);
            }
            }   
        }
        return de;
    }
}
