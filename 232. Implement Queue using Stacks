class MyQueue {
    Stack<Integer> s1;               //initialize the stack. s1 is for in and s2 is for out.
    Stack<Integer> s2;
    public MyQueue() {
        s1 = new Stack<Integer>();
        s2 = new Stack<Integer>();
    }
    
    public void push(int x) {       // just push it into s1
        s1.push(x);
    }
    
    public int pop() {              //first, check if the s2 is empty, if so, move all the number in s1 to s2, then the one need to be pop will be on the top
        if(s2.isEmpty()) {            and if the s2 is not empty, then just pop from s2.
            while(!s1.isEmpty()) {
                s2.push(s1.pop());
            }
        }
        return s2.pop();
    }
    
    public int peek() {             //like the one above
        if(s2.isEmpty()) {
            while(!s1.isEmpty()) {
                s2.push(s1.pop());
            }
        }
        return s2.peek();
    }
    
    public boolean empty() {
        return s1.isEmpty()&&s2.isEmpty();
        }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
