class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res =new ArrayList<>();
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return res;
        }
        int m = matrix.length;
        int n = matrix[0].length;
        int i = 0;
        int count = (Math.min(n,m)+1)/2;
        while(i<count) {
            for (int j = i; j < n-i; j++) {
                res.add(matrix[i][j]);
            }
            for (int j = i + 1; j < m-i; j++) {
                res.add(matrix[j][(n-1)-i]);
            }
            for (int j = n-1-i-1; j >=i &&(m-1-i != i); j--) {
                res.add(matrix[m-1-i][j]);
            }
            for (int j = m-1-i-1; j >=i+1 &&(n-1-i != i); j--) {
                res.add(matrix[j][i]);
            }
            i++;
        }
        return res;
    }
}
