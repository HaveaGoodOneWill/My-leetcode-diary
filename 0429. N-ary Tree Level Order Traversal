/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<List<Integer>> levelOrder(Node root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null) {
            return res;
        }
        Queue<Node> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
            List<Integer> re = new ArrayList<>();
            int len = queue.size();
            for(int i = 0; i < len; i++) {
                Node x = queue.remove();
                re.add(x.val);
                queue.addAll(x.children);
            }
            res.add(re);
        }
        return res;
    }
    
}
